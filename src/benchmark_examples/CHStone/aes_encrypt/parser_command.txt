Testcase: AES_ENCRYPT

Run the following command from "src" folder:
There are 4 top level verilogs hence we have to run parser 4 times.

1.python parser.py -x -f benchmark_examples/CHStone/aes_encrypt/console_input/aes_func_call_input.txt -t aes_func_call benchmark_examples/CHStone/aes_encrypt/verilog/aes_func_call_new.v benchmark_examples/CHStone/aes_encrypt/verilog/MixColumn_AddRoundEe.v
2.python parser.py -f benchmark_examples/CHStone/aes_encrypt/console_input/MixColumn_AddRoundKe_input.txt -t MixColumn_AddRoundKe benchmark_examples/CHStone/aes_encrypt/verilog/MixColumn_AddRoundKe_new.v benchmark_examples/CHStone/aes_encrypt/verilog/MixColumn_AddRoundEe.v benchmark_examples/CHStone/aes_encrypt/verilog/MixColumn_AddRouncud.v 
3.python parser.py -f benchmark_examples/CHStone/aes_encrypt/console_input/ByteSub_ShiftRow_input.txt -t ByteSub_ShiftRow benchmark_examples/CHStone/aes_encrypt/verilog/ByteSub_ShiftRow_new.v benchmark_examples/CHStone/aes_encrypt/verilog/ByteSub_ShiftRow_bkb.v
4.python parser.py -f benchmark_examples/CHStone/aes_encrypt/console_input/AddRoundKey_input.txt -t AddRoundKey benchmark_examples/CHStone/aes_encrypt/verilog/AddRoundKey_new.v benchmark_examples/CHStone/aes_encrypt/verilog/AddRoundKey_word1.v 

Note: To input the RAM, ROM and Function Input from console remove -f and the text file path from above command.