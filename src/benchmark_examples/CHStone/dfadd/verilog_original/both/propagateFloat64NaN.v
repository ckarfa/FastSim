// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module propagateFloat64NaN (
        ap_ready,
        a,
        b,
        float_exception_flag_i,
        float_exception_flag_o,
        float_exception_flag_o_ap_vld,
        ap_return
);


output   ap_ready;
input  [63:0] a;
input  [63:0] b;
input  [31:0] float_exception_flag_i;
output  [31:0] float_exception_flag_o;
output   float_exception_flag_o_ap_vld;
output  [63:0] ap_return;

reg[31:0] float_exception_flag_o;
reg float_exception_flag_o_ap_vld;

wire   [0:0] tmp_38_fu_144_p2;
wire   [31:0] tmp_39_fu_154_p2;
wire   [11:0] tmp_41_fu_40_p4;
wire   [62:0] tmp_fu_50_p3;
wire   [50:0] tmp_56_fu_64_p1;
wire   [0:0] tmp_s_fu_58_p2;
wire   [0:0] tmp_30_fu_68_p2;
wire   [63:0] tmp_57_fu_80_p2;
wire   [11:0] tmp_42_fu_92_p4;
wire   [62:0] tmp_34_fu_102_p3;
wire   [50:0] tmp_58_fu_116_p1;
wire   [0:0] tmp_35_fu_110_p2;
wire   [0:0] tmp_36_fu_120_p2;
wire   [0:0] tmp_31_fu_74_p2;
wire   [0:0] tmp_37_fu_126_p2;
wire   [63:0] b_assign_fu_138_p2;
wire   [63:0] a_assign_fu_132_p2;
wire   [0:0] tmp_33_fu_86_p2;
wire   [63:0] p_mux_fu_166_p3;
wire   [63:0] b_assign_1_fu_174_p3;

always @ (*) begin
    if ((tmp_38_fu_144_p2 == 1'd1)) begin
        float_exception_flag_o = tmp_39_fu_154_p2;
    end else begin
        float_exception_flag_o = float_exception_flag_i;
    end
end

always @ (*) begin
    if ((tmp_38_fu_144_p2 == 1'd1)) begin
        float_exception_flag_o_ap_vld = 1'b1;
    end else begin
        float_exception_flag_o_ap_vld = 1'b0;
    end
end

assign a_assign_fu_132_p2 = (64'd2251799813685248 | a);

assign ap_ready = 1'b1;

assign ap_return = ((tmp_38_fu_144_p2[0:0] === 1'b1) ? p_mux_fu_166_p3 : b_assign_1_fu_174_p3);

assign b_assign_1_fu_174_p3 = ((tmp_33_fu_86_p2[0:0] === 1'b1) ? b_assign_fu_138_p2 : a_assign_fu_132_p2);

assign b_assign_fu_138_p2 = (b | 64'd2251799813685248);

assign p_mux_fu_166_p3 = ((tmp_37_fu_126_p2[0:0] === 1'b1) ? b_assign_fu_138_p2 : a_assign_fu_132_p2);

assign tmp_30_fu_68_p2 = ((tmp_56_fu_64_p1 != 51'd0) ? 1'b1 : 1'b0);

assign tmp_31_fu_74_p2 = (tmp_s_fu_58_p2 & tmp_30_fu_68_p2);

assign tmp_33_fu_86_p2 = ((tmp_57_fu_80_p2 > 64'd18437736874454810624) ? 1'b1 : 1'b0);

assign tmp_34_fu_102_p3 = {{tmp_42_fu_92_p4}, {51'd0}};

assign tmp_35_fu_110_p2 = ((tmp_34_fu_102_p3 == 63'd9218868437227405312) ? 1'b1 : 1'b0);

assign tmp_36_fu_120_p2 = ((tmp_58_fu_116_p1 != 51'd0) ? 1'b1 : 1'b0);

assign tmp_37_fu_126_p2 = (tmp_36_fu_120_p2 & tmp_35_fu_110_p2);

assign tmp_38_fu_144_p2 = (tmp_37_fu_126_p2 | tmp_31_fu_74_p2);

assign tmp_39_fu_154_p2 = (float_exception_flag_i | 32'd16);

assign tmp_41_fu_40_p4 = {{a[62:51]}};

assign tmp_42_fu_92_p4 = {{b[62:51]}};

assign tmp_56_fu_64_p1 = a[50:0];

assign tmp_57_fu_80_p2 = b << 64'd1;

assign tmp_58_fu_116_p1 = b[50:0];

assign tmp_fu_50_p3 = {{tmp_41_fu_40_p4}, {51'd0}};

assign tmp_s_fu_58_p2 = ((tmp_fu_50_p3 == 63'd9218868437227405312) ? 1'b1 : 1'b0);

endmodule //propagateFloat64NaN
