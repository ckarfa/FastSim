// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeySchedule (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        type_r,
        key_address0,
        key_ce0,
        key_q0
);

parameter    ap_ST_fsm_state1 = 84'd1;
parameter    ap_ST_fsm_state2 = 84'd2;
parameter    ap_ST_fsm_state3 = 84'd4;
parameter    ap_ST_fsm_state4 = 84'd8;
parameter    ap_ST_fsm_state5 = 84'd16;
parameter    ap_ST_fsm_state6 = 84'd32;
parameter    ap_ST_fsm_state7 = 84'd64;
parameter    ap_ST_fsm_state8 = 84'd128;
parameter    ap_ST_fsm_state9 = 84'd256;
parameter    ap_ST_fsm_state10 = 84'd512;
parameter    ap_ST_fsm_state11 = 84'd1024;
parameter    ap_ST_fsm_state12 = 84'd2048;
parameter    ap_ST_fsm_state13 = 84'd4096;
parameter    ap_ST_fsm_state14 = 84'd8192;
parameter    ap_ST_fsm_state15 = 84'd16384;
parameter    ap_ST_fsm_state16 = 84'd32768;
parameter    ap_ST_fsm_state17 = 84'd65536;
parameter    ap_ST_fsm_state18 = 84'd131072;
parameter    ap_ST_fsm_state19 = 84'd262144;
parameter    ap_ST_fsm_state20 = 84'd524288;
parameter    ap_ST_fsm_state21 = 84'd1048576;
parameter    ap_ST_fsm_state22 = 84'd2097152;
parameter    ap_ST_fsm_state23 = 84'd4194304;
parameter    ap_ST_fsm_state24 = 84'd8388608;
parameter    ap_ST_fsm_state25 = 84'd16777216;
parameter    ap_ST_fsm_state26 = 84'd33554432;
parameter    ap_ST_fsm_state27 = 84'd67108864;
parameter    ap_ST_fsm_state28 = 84'd134217728;
parameter    ap_ST_fsm_state29 = 84'd268435456;
parameter    ap_ST_fsm_state30 = 84'd536870912;
parameter    ap_ST_fsm_state31 = 84'd1073741824;
parameter    ap_ST_fsm_state32 = 84'd2147483648;
parameter    ap_ST_fsm_state33 = 84'd4294967296;
parameter    ap_ST_fsm_state34 = 84'd8589934592;
parameter    ap_ST_fsm_state35 = 84'd17179869184;
parameter    ap_ST_fsm_state36 = 84'd34359738368;
parameter    ap_ST_fsm_state37 = 84'd68719476736;
parameter    ap_ST_fsm_state38 = 84'd137438953472;
parameter    ap_ST_fsm_state39 = 84'd274877906944;
parameter    ap_ST_fsm_state40 = 84'd549755813888;
parameter    ap_ST_fsm_state41 = 84'd1099511627776;
parameter    ap_ST_fsm_state42 = 84'd2199023255552;
parameter    ap_ST_fsm_state43 = 84'd4398046511104;
parameter    ap_ST_fsm_state44 = 84'd8796093022208;
parameter    ap_ST_fsm_state45 = 84'd17592186044416;
parameter    ap_ST_fsm_state46 = 84'd35184372088832;
parameter    ap_ST_fsm_state47 = 84'd70368744177664;
parameter    ap_ST_fsm_state48 = 84'd140737488355328;
parameter    ap_ST_fsm_state49 = 84'd281474976710656;
parameter    ap_ST_fsm_state50 = 84'd562949953421312;
parameter    ap_ST_fsm_state51 = 84'd1125899906842624;
parameter    ap_ST_fsm_state52 = 84'd2251799813685248;
parameter    ap_ST_fsm_state53 = 84'd4503599627370496;
parameter    ap_ST_fsm_state54 = 84'd9007199254740992;
parameter    ap_ST_fsm_state55 = 84'd18014398509481984;
parameter    ap_ST_fsm_state56 = 84'd36028797018963968;
parameter    ap_ST_fsm_state57 = 84'd72057594037927936;
parameter    ap_ST_fsm_state58 = 84'd144115188075855872;
parameter    ap_ST_fsm_state59 = 84'd288230376151711744;
parameter    ap_ST_fsm_state60 = 84'd576460752303423488;
parameter    ap_ST_fsm_state61 = 84'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 84'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 84'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 84'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 84'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 84'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 84'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 84'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 84'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 84'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 84'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 84'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 84'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 84'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 84'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 84'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 84'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 84'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 84'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 84'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 84'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 84'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 84'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 84'd9671406556917033397649408;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] type_r;
output  [4:0] key_address0;
output   key_ce0;
input  [31:0] key_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg key_ce0;

(* fsm_encoding = "none" *) reg   [83:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] word_address0;
reg    word_ce0;
reg    word_we0;
reg   [31:0] word_d0;
wire   [31:0] word_q0;
reg   [8:0] word_address1;
reg    word_ce1;
wire   [31:0] word_q1;
reg   [7:0] Sbox_address0;
reg    Sbox_ce0;
wire   [7:0] Sbox_q0;
reg   [7:0] Sbox_address1;
reg    Sbox_ce1;
wire   [7:0] Sbox_q1;
wire   [4:0] Rcon0_address0;
reg    Rcon0_ce0;
wire   [7:0] Rcon0_q0;
reg   [31:0] reg_542;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
reg   [31:0] reg_546;
wire   [31:0] type_read_read_fu_106_p2;
wire   [7:0] round_val_cast_cast_fu_594_p1;
reg   [7:0] round_val_cast_cast_reg_1445;
wire   [7:0] nb_cast_cast_fu_598_p1;
reg   [7:0] nb_cast_cast_reg_1450;
wire   [7:0] j_cast_fu_602_p1;
reg   [7:0] j_cast_reg_1455;
wire   [31:0] j_cast2_fu_606_p1;
reg   [31:0] j_cast2_reg_1460;
wire   [9:0] j4_cast1_cast_fu_610_p1;
reg   [9:0] j4_cast1_cast_reg_1467;
wire    ap_CS_fsm_state2;
wire   [3:0] j_2_fu_620_p2;
reg   [3:0] j_2_reg_1475;
wire   [4:0] tmp_s_fu_630_p3;
reg   [4:0] tmp_s_reg_1480;
wire   [0:0] exitcond3_fu_614_p2;
wire   [31:0] tmp_45_cast_fu_642_p1;
reg   [31:0] tmp_45_cast_reg_1485;
wire   [0:0] tmp_30_fu_646_p2;
reg   [0:0] tmp_30_reg_1490;
reg   [8:0] word_addr_reg_1495;
wire    ap_CS_fsm_state3;
wire   [2:0] i_6_fu_698_p2;
reg   [2:0] i_6_reg_1503;
wire   [0:0] exitcond2_fu_692_p2;
wire   [9:0] tmp_40_fu_714_p1;
reg   [9:0] tmp_40_reg_1513;
wire    ap_CS_fsm_state5;
wire   [3:0] tmp_41_fu_728_p1;
reg   [3:0] tmp_41_reg_1521;
wire    ap_CS_fsm_state40;
wire   [0:0] tmp_33_fu_732_p2;
reg   [0:0] tmp_33_reg_1526;
wire   [7:0] tmp_46_fu_738_p1;
reg   [7:0] tmp_46_reg_1530;
reg   [8:0] word_addr_1_reg_1535;
reg   [8:0] word_addr_2_reg_1540;
reg   [8:0] word_addr_3_reg_1546;
reg   [8:0] word_addr_4_reg_1552;
reg   [31:0] temp_0_1_reg_1557;
wire    ap_CS_fsm_state41;
reg   [31:0] temp_1_1_reg_1562;
wire    ap_CS_fsm_state42;
reg   [0:0] tmp_50_reg_1577;
reg   [0:0] tmp_61_reg_1583;
wire   [9:0] tmp_59_fu_861_p2;
reg   [9:0] tmp_59_reg_1589;
wire   [9:0] tmp_68_fu_929_p2;
reg   [9:0] tmp_68_reg_1594;
reg   [0:0] tmp_71_reg_1599;
reg   [0:0] tmp_81_reg_1605;
wire    ap_CS_fsm_state77;
wire   [5:0] grp_fu_794_p2;
reg   [5:0] tmp_35_reg_1616;
wire   [9:0] tmp_76_fu_1005_p2;
reg   [9:0] tmp_76_reg_1626;
wire   [9:0] tmp_84_fu_1073_p2;
reg   [9:0] tmp_84_reg_1631;
reg   [7:0] Sbox_load_reg_1636;
wire    ap_CS_fsm_state78;
reg   [7:0] temp_1_reg_1646;
wire   [0:0] or_cond_36_fu_1130_p2;
reg   [0:0] or_cond_36_reg_1661;
wire    ap_CS_fsm_state79;
wire   [2:0] i_7_fu_1141_p2;
reg   [2:0] i_7_reg_1668;
wire    ap_CS_fsm_state80;
wire   [1:0] tmp_91_fu_1147_p1;
reg   [1:0] tmp_91_reg_1673;
wire   [0:0] exitcond1_fu_1135_p2;
wire   [31:0] in_assign_4_fu_1151_p6;
reg   [31:0] in_assign_4_reg_1680;
reg   [0:0] tmp_98_reg_1686;
wire   [3:0] tmp_100_fu_1179_p1;
reg   [3:0] tmp_100_reg_1692;
reg   [5:0] p_lshr_i4_cast_reg_1697;
wire   [9:0] tmp_54_cast_cast_fu_1197_p1;
reg   [9:0] tmp_54_cast_cast_reg_1702;
wire    ap_CS_fsm_state81;
wire   [31:0] temp_3_3_fu_1305_p3;
wire    ap_CS_fsm_state82;
wire   [31:0] temp_3_4_fu_1321_p3;
wire   [31:0] temp_3_7_fu_1337_p3;
wire   [31:0] temp_3_9_fu_1345_p3;
wire    ap_CS_fsm_state83;
reg   [8:0] word_addr_6_reg_1737;
wire   [2:0] i_8_fu_1405_p2;
reg   [2:0] i_8_reg_1745;
wire   [31:0] tmp_14_fu_1415_p6;
reg   [31:0] tmp_14_reg_1750;
wire   [0:0] exitcond_fu_1399_p2;
wire   [31:0] j_3_fu_1429_p2;
reg   [3:0] round_val_1_phi_fu_246_p18;
reg   [3:0] nb_1_phi_fu_278_p18;
reg   [3:0] j_phi_fu_310_p18;
reg   [3:0] j_reg_307;
reg   [3:0] j4_reg_340;
reg   [2:0] i_reg_351;
wire    ap_CS_fsm_state4;
reg   [31:0] j_1_reg_362;
wire   [31:0] temp_2_cast_fu_1115_p1;
reg   [31:0] temp_22_phi_fu_375_p4;
reg   [31:0] temp_22_reg_372;
wire   [31:0] temp_1_cast_fu_1111_p1;
reg   [31:0] temp_12_phi_fu_385_p4;
reg   [31:0] temp_12_reg_382;
wire   [31:0] temp_0_1_cast_fu_1106_p1;
reg   [31:0] temp_02_phi_fu_395_p4;
reg   [31:0] temp_02_reg_392;
wire   [31:0] Sbox_load_3_cast_fu_1120_p1;
reg   [31:0] temp_3_phi_fu_405_p4;
reg   [31:0] temp_3_reg_402;
reg   [31:0] temp_31_reg_412;
reg   [31:0] temp_2_s_reg_423;
reg   [31:0] temp_3_5_reg_434;
reg   [31:0] temp_3_8_reg_445;
reg   [2:0] i_1_reg_456;
reg   [31:0] temp_3_2_reg_467;
reg   [31:0] temp_2_3_reg_479;
reg   [31:0] temp_1_3_reg_491;
reg   [31:0] temp_0_3_reg_503;
reg   [2:0] i_2_reg_515;
wire    ap_CS_fsm_state84;
wire  signed [31:0] tmp_49_cast_fu_687_p1;
wire   [31:0] sum_cast_fu_709_p1;
wire   [31:0] tmp_50_cast1_fu_767_p1;
wire   [31:0] tmp_51_cast_fu_778_p1;
wire  signed [31:0] tmp_52_cast1_fu_789_p1;
wire   [31:0] tmp_50_cast_fu_748_p1;
wire   [31:0] tmp_60_cast_fu_935_p1;
wire   [31:0] tmp_68_cast_fu_939_p1;
wire   [31:0] tmp_52_cast_fu_1088_p1;
wire   [31:0] tmp_76_cast_fu_1093_p1;
wire   [31:0] tmp_84_cast_fu_1097_p1;
wire   [31:0] tmp_92_cast_fu_1267_p1;
wire  signed [31:0] tmp_96_cast_fu_1384_p1;
wire   [31:0] tmp_97_cast_fu_1394_p1;
wire    ap_CS_fsm_state74;
wire   [31:0] tmp_39_fu_1435_p2;
wire   [31:0] grp_fu_550_p2;
wire   [5:0] grp_fu_556_p4;
wire   [31:0] grp_fu_572_p2;
wire   [5:0] grp_fu_578_p4;
wire   [2:0] tmp_fu_626_p1;
wire   [3:0] tmp_29_fu_638_p0;
wire   [3:0] tmp_29_fu_638_p1;
wire   [7:0] tmp_29_fu_638_p2;
wire   [5:0] tmp_43_fu_664_p3;
wire   [9:0] tmp_42_fu_656_p3;
wire   [9:0] p_shl9_cast_fu_672_p1;
wire   [9:0] tmp_44_fu_676_p2;
wire   [9:0] tmp_45_fu_682_p2;
wire   [4:0] i_cast_fu_652_p1;
wire   [4:0] sum_fu_704_p2;
wire   [4:0] grp_fu_723_p1;
wire   [3:0] grp_fu_723_p2;
wire   [7:0] tmp_34_fu_742_p2;
wire   [8:0] tmp_50_cast_cast_fu_757_p1;
wire   [8:0] tmp_47_fu_761_p2;
wire   [8:0] tmp_48_fu_772_p2;
wire   [9:0] tmp_50_cast_cast1_fu_753_p1;
wire   [9:0] tmp_49_fu_783_p2;
wire   [4:0] grp_fu_794_p1;
wire   [3:0] tmp_52_fu_803_p1;
wire   [9:0] tmp_53_fu_807_p3;
wire   [3:0] tmp_51_fu_799_p1;
wire   [9:0] tmp_54_fu_815_p2;
wire   [9:0] tmp_55_fu_821_p3;
wire   [5:0] grp_fu_566_p2;
wire   [5:0] tmp_57_fu_836_p4;
wire   [5:0] tmp_58_fu_846_p3;
wire   [9:0] tmp_59_cast_fu_853_p3;
wire   [9:0] tmp_56_fu_829_p3;
wire   [3:0] tmp_63_fu_871_p1;
wire   [9:0] tmp_64_fu_875_p3;
wire   [3:0] tmp_62_fu_867_p1;
wire   [9:0] tmp_65_fu_883_p2;
wire   [9:0] tmp_66_fu_889_p3;
wire   [5:0] grp_fu_588_p2;
wire   [5:0] tmp_69_fu_904_p4;
wire   [5:0] tmp_70_fu_914_p3;
wire   [9:0] tmp_67_cast_fu_921_p3;
wire   [9:0] tmp_67_fu_897_p3;
wire   [3:0] tmp_73_fu_947_p1;
wire   [9:0] tmp_74_fu_951_p3;
wire   [3:0] tmp_72_fu_943_p1;
wire   [9:0] tmp_75_fu_959_p2;
wire   [9:0] tmp_77_fu_965_p3;
wire   [5:0] tmp_79_fu_980_p4;
wire   [5:0] tmp_80_fu_990_p3;
wire   [9:0] tmp_75_cast_fu_997_p3;
wire   [9:0] tmp_78_fu_973_p3;
wire   [3:0] tmp_83_fu_1015_p1;
wire   [9:0] tmp_85_fu_1019_p3;
wire   [3:0] tmp_82_fu_1011_p1;
wire   [9:0] tmp_86_fu_1027_p2;
wire   [9:0] tmp_87_fu_1033_p3;
wire   [5:0] tmp_89_fu_1048_p4;
wire   [5:0] tmp_90_fu_1058_p3;
wire   [9:0] tmp_83_cast_fu_1065_p3;
wire   [9:0] tmp_88_fu_1041_p3;
wire   [5:0] tmp_60_fu_1079_p1;
wire   [5:0] tmp_36_fu_1082_p2;
wire   [7:0] temp_0_fu_1101_p2;
wire   [0:0] tmp_37_fu_1125_p2;
wire   [1:0] in_assign_4_fu_1151_p5;
wire   [31:0] p_neg4_fu_1173_p2;
wire   [7:0] tmp_38_fu_1193_p2;
wire   [9:0] tmp_101_fu_1204_p3;
wire   [3:0] tmp_99_fu_1201_p1;
wire   [9:0] tmp_102_fu_1211_p2;
wire   [9:0] tmp_103_fu_1217_p3;
wire   [5:0] p_neg_t_i4_fu_1232_p2;
wire   [5:0] tmp_105_fu_1237_p4;
wire   [5:0] tmp_106_fu_1246_p3;
wire   [9:0] tmp_91_cast_fu_1253_p3;
wire   [9:0] tmp_104_fu_1225_p3;
wire   [9:0] tmp_92_fu_1261_p2;
wire   [0:0] sel_tmp1_fu_1286_p2;
wire   [0:0] sel_tmp9_fu_1281_p2;
wire   [0:0] sel_tmp_fu_1276_p2;
wire   [31:0] temp_3_10_cast_fu_1272_p1;
wire   [0:0] or_cond_fu_1291_p2;
wire   [31:0] newSel_fu_1297_p3;
wire   [31:0] newSel2_fu_1313_p3;
wire   [31:0] temp_3_6_fu_1329_p3;
wire   [5:0] tmp_94_fu_1361_p3;
wire   [9:0] tmp_93_fu_1353_p3;
wire   [9:0] p_shl2_cast_fu_1369_p1;
wire   [9:0] tmp_95_fu_1373_p2;
wire   [9:0] tmp_96_fu_1379_p2;
wire   [9:0] tmp_97_fu_1389_p2;
wire   [1:0] tmp_14_fu_1415_p5;
wire   [0:0] tmp_31_fu_718_p2;
reg    grp_fu_723_ap_start;
wire    grp_fu_723_ap_done;
reg    grp_fu_794_ap_start;
wire    grp_fu_794_ap_done;
reg   [83:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 84'd1;
end

KeySchedule_word #(
    .DataWidth( 32 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
word_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(word_address0),
    .ce0(word_ce0),
    .we0(word_we0),
    .d0(word_d0),
    .q0(word_q0),
    .address1(word_address1),
    .ce1(word_ce1),
    .q1(word_q1)
);

KeySchedule_Sbox #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Sbox_address0),
    .ce0(Sbox_ce0),
    .q0(Sbox_q0),
    .address1(Sbox_address1),
    .ce1(Sbox_ce1),
    .q1(Sbox_q1)
);

KeySchedule_Rcon0 #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
Rcon0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rcon0_address0),
    .ce0(Rcon0_ce0),
    .q0(Rcon0_q0)
);

encrypt_srem_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
encrypt_srem_32nsbkb_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_723_ap_start),
    .done(grp_fu_723_ap_done),
    .din0(j_1_reg_362),
    .din1(grp_fu_723_p1),
    .ce(1'b1),
    .dout(grp_fu_723_p2)
);

encrypt_sdiv_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
encrypt_sdiv_32nscud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_794_ap_start),
    .done(grp_fu_794_ap_done),
    .din0(j_1_reg_362),
    .din1(grp_fu_794_p1),
    .ce(1'b1),
    .dout(grp_fu_794_p2)
);

encrypt_mux_42_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
encrypt_mux_42_32_1_U2(
    .din1(temp_3_8_reg_445),
    .din2(temp_3_5_reg_434),
    .din3(temp_2_s_reg_423),
    .din4(temp_31_reg_412),
    .din5(in_assign_4_fu_1151_p5),
    .dout(in_assign_4_fu_1151_p6)
);

encrypt_mux_42_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
encrypt_mux_42_32_1_U3(
    .din1(temp_0_3_reg_503),
    .din2(temp_1_3_reg_491),
    .din3(temp_2_3_reg_479),
    .din4(temp_3_2_reg_467),
    .din5(tmp_14_fu_1415_p5),
    .dout(tmp_14_fu_1415_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == or_cond_36_fu_1130_p2))) begin
        i_1_reg_456 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        i_1_reg_456 <= i_7_reg_1668;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_2_reg_515 <= i_8_reg_1745;
    end else if (((1'b1 == ap_CS_fsm_state80) & ((1'd0 == or_cond_36_reg_1661) | (1'd1 == exitcond1_fu_1135_p2)))) begin
        i_2_reg_515 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_614_p2 == 1'd0))) begin
        i_reg_351 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_351 <= i_6_reg_1503;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == exitcond2_fu_692_p2))) begin
        j4_reg_340 <= j_2_reg_1475;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | (type_read_read_fu_106_p2 == 32'd128192) | (type_read_read_fu_106_p2 == 32'd128256) | (type_read_read_fu_106_p2 == 32'd192128) | (type_read_read_fu_106_p2 == 32'd192192) | (type_read_read_fu_106_p2 == 32'd192256) | (type_read_read_fu_106_p2 == 32'd256128) | (type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256)))) begin
        j4_reg_340 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_614_p2 == 1'd1))) begin
        j_1_reg_362 <= j_cast2_reg_1460;
    end else if (((1'b1 == ap_CS_fsm_state83) & (1'd1 == exitcond_fu_1399_p2))) begin
        j_1_reg_362 <= j_3_fu_1429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128128)))) begin
                j_reg_307[1] <= 1'b0;
        j_reg_307[2] <= 1'b1;
        j_reg_307[3] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192128)))) begin
                j_reg_307[1] <= 1'b1;
        j_reg_307[2] <= 1'b1;
        j_reg_307[3] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256128)))) begin
                j_reg_307[1] <= 1'b0;
        j_reg_307[2] <= 1'b0;
        j_reg_307[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_02_reg_392 <= temp_0_1_reg_1557;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_02_reg_392 <= temp_0_1_cast_fu_1106_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (1'd1 == or_cond_36_reg_1661) & (1'd1 == exitcond1_fu_1135_p2))) begin
        temp_0_3_reg_503 <= temp_3_8_reg_445;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd0 == or_cond_36_fu_1130_p2))) begin
        temp_0_3_reg_503 <= temp_02_phi_fu_395_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_12_reg_382 <= temp_1_1_reg_1562;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_12_reg_382 <= temp_1_cast_fu_1111_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (1'd1 == or_cond_36_reg_1661) & (1'd1 == exitcond1_fu_1135_p2))) begin
        temp_1_3_reg_491 <= temp_3_5_reg_434;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd0 == or_cond_36_fu_1130_p2))) begin
        temp_1_3_reg_491 <= temp_12_phi_fu_385_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_22_reg_372 <= word_q1;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_22_reg_372 <= temp_2_cast_fu_1115_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (1'd1 == or_cond_36_reg_1661) & (1'd1 == exitcond1_fu_1135_p2))) begin
        temp_2_3_reg_479 <= temp_2_s_reg_423;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd0 == or_cond_36_fu_1130_p2))) begin
        temp_2_3_reg_479 <= temp_22_phi_fu_375_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == or_cond_36_fu_1130_p2))) begin
        temp_2_s_reg_423 <= temp_22_phi_fu_375_p4;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        temp_2_s_reg_423 <= temp_3_4_fu_1321_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == or_cond_36_fu_1130_p2))) begin
        temp_31_reg_412 <= temp_3_phi_fu_405_p4;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        temp_31_reg_412 <= temp_3_3_fu_1305_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (1'd1 == or_cond_36_reg_1661) & (1'd1 == exitcond1_fu_1135_p2))) begin
        temp_3_2_reg_467 <= temp_31_reg_412;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd0 == or_cond_36_fu_1130_p2))) begin
        temp_3_2_reg_467 <= temp_3_phi_fu_405_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == or_cond_36_fu_1130_p2))) begin
        temp_3_5_reg_434 <= temp_12_phi_fu_385_p4;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        temp_3_5_reg_434 <= temp_3_7_fu_1337_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == or_cond_36_fu_1130_p2))) begin
        temp_3_8_reg_445 <= temp_02_phi_fu_395_p4;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        temp_3_8_reg_445 <= temp_3_9_fu_1345_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_3_reg_402 <= word_q0;
    end else if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_3_reg_402 <= Sbox_load_3_cast_fu_1120_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        Sbox_load_reg_1636 <= Sbox_q0;
        temp_1_reg_1646 <= Sbox_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_6_reg_1503 <= i_6_fu_698_p2;
        word_addr_reg_1495 <= tmp_49_cast_fu_687_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (1'd1 == or_cond_36_reg_1661))) begin
        i_7_reg_1668 <= i_7_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        i_8_reg_1745 <= i_8_fu_1405_p2;
        word_addr_6_reg_1737 <= tmp_97_cast_fu_1394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & (1'd1 == or_cond_36_reg_1661) & (1'd0 == exitcond1_fu_1135_p2))) begin
        in_assign_4_reg_1680 <= in_assign_4_fu_1151_p6;
        p_lshr_i4_cast_reg_1697 <= {{p_neg4_fu_1173_p2[9:4]}};
        tmp_100_reg_1692 <= tmp_100_fu_1179_p1;
        tmp_91_reg_1673 <= tmp_91_fu_1147_p1;
        tmp_98_reg_1686 <= in_assign_4_fu_1151_p6[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        j4_cast1_cast_reg_1467[3 : 0] <= j4_cast1_cast_fu_610_p1[3 : 0];
        j_2_reg_1475 <= j_2_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | (type_read_read_fu_106_p2 == 32'd128192) | (type_read_read_fu_106_p2 == 32'd128256) | (type_read_read_fu_106_p2 == 32'd192128) | (type_read_read_fu_106_p2 == 32'd192192) | (type_read_read_fu_106_p2 == 32'd192256) | (type_read_read_fu_106_p2 == 32'd256128) | (type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256)))) begin
        j_cast2_reg_1460[3 : 0] <= j_cast2_fu_606_p1[3 : 0];
        j_cast_reg_1455[3 : 0] <= j_cast_fu_602_p1[3 : 0];
        nb_cast_cast_reg_1450[3 : 0] <= nb_cast_cast_fu_598_p1[3 : 0];
        round_val_cast_cast_reg_1445[3 : 0] <= round_val_cast_cast_fu_594_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        or_cond_36_reg_1661 <= or_cond_36_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state76))) begin
        reg_542 <= word_q1;
        reg_546 <= word_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        temp_0_1_reg_1557 <= word_q0;
        temp_1_1_reg_1562 <= word_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (1'd0 == exitcond_fu_1399_p2))) begin
        tmp_14_reg_1750 <= tmp_14_fu_1415_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_614_p2 == 1'd1))) begin
        tmp_30_reg_1490 <= tmp_30_fu_646_p2;
        tmp_45_cast_reg_1485[7 : 0] <= tmp_45_cast_fu_642_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_33_reg_1526 <= tmp_33_fu_732_p2;
        tmp_41_reg_1521 <= tmp_41_fu_728_p1;
        tmp_46_reg_1530 <= tmp_46_fu_738_p1;
        word_addr_1_reg_1535 <= tmp_50_cast1_fu_767_p1;
        word_addr_2_reg_1540 <= tmp_51_cast_fu_778_p1;
        word_addr_3_reg_1546 <= tmp_52_cast1_fu_789_p1;
        word_addr_4_reg_1552[7 : 0] <= tmp_50_cast_fu_748_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        tmp_35_reg_1616 <= grp_fu_794_p2;
        tmp_76_reg_1626 <= tmp_76_fu_1005_p2;
        tmp_84_reg_1631 <= tmp_84_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((type_read_read_fu_106_p2 == 32'd128128) | (type_read_read_fu_106_p2 == 32'd128192) | (type_read_read_fu_106_p2 == 32'd128256) | (type_read_read_fu_106_p2 == 32'd192128) | (type_read_read_fu_106_p2 == 32'd192192) | (type_read_read_fu_106_p2 == 32'd192256) | (type_read_read_fu_106_p2 == 32'd256128) | (type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256)) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_40_reg_1513 <= tmp_40_fu_714_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_50_reg_1577 <= word_q1[32'd31];
        tmp_61_reg_1583 <= word_q0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) & ((1'd0 == or_cond_36_reg_1661) | (1'd1 == exitcond1_fu_1135_p2)))) begin
        tmp_54_cast_cast_reg_1702[7 : 0] <= tmp_54_cast_cast_fu_1197_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        tmp_59_reg_1589 <= tmp_59_fu_861_p2;
        tmp_68_reg_1594 <= tmp_68_fu_929_p2;
        tmp_71_reg_1599 <= word_q1[32'd31];
        tmp_81_reg_1605 <= word_q0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_614_p2 == 1'd0))) begin
        tmp_s_reg_1480[4 : 2] <= tmp_s_fu_630_p3[4 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        Rcon0_ce0 = 1'b1;
    end else begin
        Rcon0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        Sbox_address0 = tmp_92_cast_fu_1267_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        Sbox_address0 = tmp_76_cast_fu_1093_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        Sbox_address0 = tmp_60_cast_fu_935_p1;
    end else begin
        Sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        Sbox_address1 = tmp_84_cast_fu_1097_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        Sbox_address1 = tmp_68_cast_fu_939_p1;
    end else begin
        Sbox_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state81))) begin
        Sbox_ce0 = 1'b1;
    end else begin
        Sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state78))) begin
        Sbox_ce1 = 1'b1;
    end else begin
        Sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state5) & ((1'd0 == tmp_31_fu_718_p2) | (~(type_read_read_fu_106_p2 == 32'd128128) & ~(type_read_read_fu_106_p2 == 32'd128192) & ~(type_read_read_fu_106_p2 == 32'd128256) & ~(type_read_read_fu_106_p2 == 32'd192128) & ~(type_read_read_fu_106_p2 == 32'd192192) & ~(type_read_read_fu_106_p2 == 32'd192256) & ~(type_read_read_fu_106_p2 == 32'd256128) & ~(type_read_read_fu_106_p2 == 32'd256192) & ~(type_read_read_fu_106_p2 == 32'd256256)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((1'd0 == tmp_31_fu_718_p2) | (~(type_read_read_fu_106_p2 == 32'd128128) & ~(type_read_read_fu_106_p2 == 32'd128192) & ~(type_read_read_fu_106_p2 == 32'd128256) & ~(type_read_read_fu_106_p2 == 32'd192128) & ~(type_read_read_fu_106_p2 == 32'd192192) & ~(type_read_read_fu_106_p2 == 32'd192256) & ~(type_read_read_fu_106_p2 == 32'd256128) & ~(type_read_read_fu_106_p2 == 32'd256192) & ~(type_read_read_fu_106_p2 == 32'd256256))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((type_read_read_fu_106_p2 == 32'd128128) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd128192) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd128256) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd192128) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd192192) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd192256) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd256128) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd256192) & (1'd1 == tmp_31_fu_718_p2)) | ((type_read_read_fu_106_p2 == 32'd256256) & (1'd1 == tmp_31_fu_718_p2))))) begin
        grp_fu_723_ap_start = 1'b1;
    end else begin
        grp_fu_723_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_33_fu_732_p2))) begin
        grp_fu_794_ap_start = 1'b1;
    end else begin
        grp_fu_794_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128128)))) begin
        j_phi_fu_310_p18 = 4'd4;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192128)))) begin
        j_phi_fu_310_p18 = 4'd6;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256128)))) begin
        j_phi_fu_310_p18 = 4'd8;
    end else begin
        j_phi_fu_310_p18 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        key_ce0 = 1'b1;
    end else begin
        key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128128)))) begin
        nb_1_phi_fu_278_p18 = 4'd4;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128192)))) begin
        nb_1_phi_fu_278_p18 = 4'd6;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128256)))) begin
        nb_1_phi_fu_278_p18 = 4'd8;
    end else begin
        nb_1_phi_fu_278_p18 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128128))) begin
        round_val_1_phi_fu_246_p18 = 4'd11;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128192)))) begin
        round_val_1_phi_fu_246_p18 = 4'd13;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192256)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128256)))) begin
        round_val_1_phi_fu_246_p18 = 4'd15;
    end else begin
        round_val_1_phi_fu_246_p18 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_02_phi_fu_395_p4 = temp_0_1_cast_fu_1106_p1;
    end else begin
        temp_02_phi_fu_395_p4 = temp_02_reg_392;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_12_phi_fu_385_p4 = temp_1_cast_fu_1111_p1;
    end else begin
        temp_12_phi_fu_385_p4 = temp_12_reg_382;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_22_phi_fu_375_p4 = temp_2_cast_fu_1115_p1;
    end else begin
        temp_22_phi_fu_375_p4 = temp_22_reg_372;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) & (1'd1 == tmp_33_reg_1526))) begin
        temp_3_phi_fu_405_p4 = Sbox_load_3_cast_fu_1120_p1;
    end else begin
        temp_3_phi_fu_405_p4 = temp_3_reg_402;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        word_address0 = word_addr_6_reg_1737;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        word_address0 = word_addr_4_reg_1552;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        word_address0 = word_addr_2_reg_1540;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        word_address0 = word_addr_3_reg_1546;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        word_address0 = tmp_50_cast_fu_748_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        word_address0 = word_addr_reg_1495;
    end else begin
        word_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        word_address1 = tmp_96_cast_fu_1384_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        word_address1 = word_addr_3_reg_1546;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        word_address1 = word_addr_1_reg_1535;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        word_address1 = word_addr_2_reg_1540;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        word_address1 = tmp_50_cast1_fu_767_p1;
    end else begin
        word_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state74))) begin
        word_ce0 = 1'b1;
    end else begin
        word_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state74))) begin
        word_ce1 = 1'b1;
    end else begin
        word_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        word_d0 = tmp_39_fu_1435_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        word_d0 = key_q0;
    end else begin
        word_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state84))) begin
        word_we0 = 1'b1;
    end else begin
        word_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | (type_read_read_fu_106_p2 == 32'd128192) | (type_read_read_fu_106_p2 == 32'd128256) | (type_read_read_fu_106_p2 == 32'd192128) | (type_read_read_fu_106_p2 == 32'd192192) | (type_read_read_fu_106_p2 == 32'd192256) | (type_read_read_fu_106_p2 == 32'd256128) | (type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ~(type_read_read_fu_106_p2 == 32'd128128) & ~(type_read_read_fu_106_p2 == 32'd128192) & ~(type_read_read_fu_106_p2 == 32'd128256) & ~(type_read_read_fu_106_p2 == 32'd192128) & ~(type_read_read_fu_106_p2 == 32'd192192) & ~(type_read_read_fu_106_p2 == 32'd192256) & ~(type_read_read_fu_106_p2 == 32'd256128) & ~(type_read_read_fu_106_p2 == 32'd256192) & ~(type_read_read_fu_106_p2 == 32'd256256))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_614_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == exitcond2_fu_692_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((1'd0 == tmp_31_fu_718_p2) | (~(type_read_read_fu_106_p2 == 32'd128128) & ~(type_read_read_fu_106_p2 == 32'd128192) & ~(type_read_read_fu_106_p2 == 32'd128256) & ~(type_read_read_fu_106_p2 == 32'd192128) & ~(type_read_read_fu_106_p2 == 32'd192192) & ~(type_read_read_fu_106_p2 == 32'd192256) & ~(type_read_read_fu_106_p2 == 32'd256128) & ~(type_read_read_fu_106_p2 == 32'd256192) & ~(type_read_read_fu_106_p2 == 32'd256256))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_33_fu_732_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & ((1'd0 == or_cond_36_reg_1661) | (1'd1 == exitcond1_fu_1135_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state83 : begin
            if (((1'b1 == ap_CS_fsm_state83) & (1'd1 == exitcond_fu_1399_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Rcon0_address0 = tmp_52_cast_fu_1088_p1;

assign Sbox_load_3_cast_fu_1120_p1 = Sbox_q1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign exitcond1_fu_1135_p2 = ((i_1_reg_456 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond2_fu_692_p2 = ((i_reg_351 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond3_fu_614_p2 = ((j4_reg_340 == j_reg_307) ? 1'b1 : 1'b0);

assign exitcond_fu_1399_p2 = ((i_2_reg_515 == 3'd4) ? 1'b1 : 1'b0);

assign grp_fu_550_p2 = (32'd0 - reg_542);

assign grp_fu_556_p4 = {{grp_fu_550_p2[9:4]}};

assign grp_fu_566_p2 = (6'd0 - grp_fu_556_p4);

assign grp_fu_572_p2 = (32'd0 - reg_546);

assign grp_fu_578_p4 = {{grp_fu_572_p2[9:4]}};

assign grp_fu_588_p2 = (6'd0 - grp_fu_578_p4);

assign grp_fu_723_p1 = j_cast2_reg_1460;

assign grp_fu_794_p1 = j_cast2_reg_1460;

assign i_6_fu_698_p2 = (i_reg_351 + 3'd1);

assign i_7_fu_1141_p2 = (i_1_reg_456 + 3'd1);

assign i_8_fu_1405_p2 = (i_2_reg_515 + 3'd1);

assign i_cast_fu_652_p1 = i_reg_351;

assign in_assign_4_fu_1151_p5 = i_1_reg_456[1:0];

assign j4_cast1_cast_fu_610_p1 = j4_reg_340;

assign j_2_fu_620_p2 = (j4_reg_340 + 4'd1);

assign j_3_fu_1429_p2 = (j_1_reg_362 + 32'd1);

assign j_cast2_fu_606_p1 = j_phi_fu_310_p18;

assign j_cast_fu_602_p1 = j_phi_fu_310_p18;

assign key_address0 = sum_cast_fu_709_p1;

assign nb_cast_cast_fu_598_p1 = nb_1_phi_fu_278_p18;

assign newSel2_fu_1313_p3 = ((sel_tmp_fu_1276_p2[0:0] === 1'b1) ? temp_3_10_cast_fu_1272_p1 : temp_2_s_reg_423);

assign newSel_fu_1297_p3 = ((sel_tmp_fu_1276_p2[0:0] === 1'b1) ? temp_31_reg_412 : temp_3_10_cast_fu_1272_p1);

assign or_cond_36_fu_1130_p2 = (tmp_30_reg_1490 & tmp_37_fu_1125_p2);

assign or_cond_fu_1291_p2 = (sel_tmp1_fu_1286_p2 | sel_tmp9_fu_1281_p2);

assign p_neg4_fu_1173_p2 = (32'd0 - in_assign_4_fu_1151_p6);

assign p_neg_t_i4_fu_1232_p2 = (6'd0 - p_lshr_i4_cast_reg_1697);

assign p_shl2_cast_fu_1369_p1 = tmp_94_fu_1361_p3;

assign p_shl9_cast_fu_672_p1 = tmp_43_fu_664_p3;

assign round_val_cast_cast_fu_594_p1 = round_val_1_phi_fu_246_p18;

assign sel_tmp1_fu_1286_p2 = ((tmp_91_reg_1673 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_1281_p2 = ((tmp_91_reg_1673 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp_fu_1276_p2 = ((tmp_91_reg_1673 == 2'd2) ? 1'b1 : 1'b0);

assign sum_cast_fu_709_p1 = sum_fu_704_p2;

assign sum_fu_704_p2 = (i_cast_fu_652_p1 + tmp_s_reg_1480);

assign temp_0_1_cast_fu_1106_p1 = temp_0_fu_1101_p2;

assign temp_0_fu_1101_p2 = (Rcon0_q0 ^ Sbox_load_reg_1636);

assign temp_1_cast_fu_1111_p1 = temp_1_reg_1646;

assign temp_2_cast_fu_1115_p1 = Sbox_q0;

assign temp_3_10_cast_fu_1272_p1 = Sbox_q0;

assign temp_3_3_fu_1305_p3 = ((or_cond_fu_1291_p2[0:0] === 1'b1) ? temp_31_reg_412 : newSel_fu_1297_p3);

assign temp_3_4_fu_1321_p3 = ((or_cond_fu_1291_p2[0:0] === 1'b1) ? temp_2_s_reg_423 : newSel2_fu_1313_p3);

assign temp_3_6_fu_1329_p3 = ((sel_tmp9_fu_1281_p2[0:0] === 1'b1) ? temp_3_10_cast_fu_1272_p1 : temp_3_5_reg_434);

assign temp_3_7_fu_1337_p3 = ((sel_tmp1_fu_1286_p2[0:0] === 1'b1) ? temp_3_5_reg_434 : temp_3_6_fu_1329_p3);

assign temp_3_9_fu_1345_p3 = ((sel_tmp1_fu_1286_p2[0:0] === 1'b1) ? temp_3_10_cast_fu_1272_p1 : temp_3_8_reg_445);

assign tmp_100_fu_1179_p1 = p_neg4_fu_1173_p2[3:0];

assign tmp_101_fu_1204_p3 = {{6'd0}, {tmp_100_reg_1692}};

assign tmp_102_fu_1211_p2 = (10'd0 - tmp_101_fu_1204_p3);

assign tmp_103_fu_1217_p3 = {{6'd0}, {tmp_99_fu_1201_p1}};

assign tmp_104_fu_1225_p3 = ((tmp_98_reg_1686[0:0] === 1'b1) ? tmp_102_fu_1211_p2 : tmp_103_fu_1217_p3);

assign tmp_105_fu_1237_p4 = {{in_assign_4_reg_1680[9:4]}};

assign tmp_106_fu_1246_p3 = ((tmp_98_reg_1686[0:0] === 1'b1) ? p_neg_t_i4_fu_1232_p2 : tmp_105_fu_1237_p4);

assign tmp_14_fu_1415_p5 = i_2_reg_515[1:0];

assign tmp_29_fu_638_p0 = nb_cast_cast_reg_1450;

assign tmp_29_fu_638_p1 = round_val_cast_cast_reg_1445;

assign tmp_29_fu_638_p2 = (tmp_29_fu_638_p0 * tmp_29_fu_638_p1);

assign tmp_30_fu_646_p2 = ((j_reg_307 > 4'd6) ? 1'b1 : 1'b0);

assign tmp_31_fu_718_p2 = (($signed(j_1_reg_362) < $signed(tmp_45_cast_reg_1485)) ? 1'b1 : 1'b0);

assign tmp_33_fu_732_p2 = ((tmp_41_fu_728_p1 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_34_fu_742_p2 = ($signed(8'd255) + $signed(tmp_46_fu_738_p1));

assign tmp_36_fu_1082_p2 = ($signed(6'd63) + $signed(tmp_60_fu_1079_p1));

assign tmp_37_fu_1125_p2 = ((tmp_41_reg_1521 == 4'd4) ? 1'b1 : 1'b0);

assign tmp_38_fu_1193_p2 = (tmp_46_reg_1530 - j_cast_reg_1455);

assign tmp_39_fu_1435_p2 = (word_q1 ^ tmp_14_reg_1750);

assign tmp_40_fu_714_p1 = j_1_reg_362[9:0];

assign tmp_41_fu_728_p1 = grp_fu_723_p2[3:0];

assign tmp_42_fu_656_p3 = {{i_reg_351}, {7'd0}};

assign tmp_43_fu_664_p3 = {{i_reg_351}, {3'd0}};

assign tmp_44_fu_676_p2 = (tmp_42_fu_656_p3 - p_shl9_cast_fu_672_p1);

assign tmp_45_cast_fu_642_p1 = tmp_29_fu_638_p2;

assign tmp_45_fu_682_p2 = (tmp_44_fu_676_p2 + j4_cast1_cast_reg_1467);

assign tmp_46_fu_738_p1 = j_1_reg_362[7:0];

assign tmp_47_fu_761_p2 = (9'd120 + tmp_50_cast_cast_fu_757_p1);

assign tmp_48_fu_772_p2 = (9'd240 + tmp_50_cast_cast_fu_757_p1);

assign tmp_49_cast_fu_687_p1 = $signed(tmp_45_fu_682_p2);

assign tmp_49_fu_783_p2 = (10'd360 + tmp_50_cast_cast1_fu_753_p1);

assign tmp_50_cast1_fu_767_p1 = tmp_47_fu_761_p2;

assign tmp_50_cast_cast1_fu_753_p1 = tmp_34_fu_742_p2;

assign tmp_50_cast_cast_fu_757_p1 = tmp_34_fu_742_p2;

assign tmp_50_cast_fu_748_p1 = tmp_34_fu_742_p2;

assign tmp_51_cast_fu_778_p1 = tmp_48_fu_772_p2;

assign tmp_51_fu_799_p1 = reg_542[3:0];

assign tmp_52_cast1_fu_789_p1 = $signed(tmp_49_fu_783_p2);

assign tmp_52_cast_fu_1088_p1 = tmp_36_fu_1082_p2;

assign tmp_52_fu_803_p1 = grp_fu_550_p2[3:0];

assign tmp_53_fu_807_p3 = {{6'd0}, {tmp_52_fu_803_p1}};

assign tmp_54_cast_cast_fu_1197_p1 = tmp_38_fu_1193_p2;

assign tmp_54_fu_815_p2 = (10'd0 - tmp_53_fu_807_p3);

assign tmp_55_fu_821_p3 = {{6'd0}, {tmp_51_fu_799_p1}};

assign tmp_56_fu_829_p3 = ((tmp_50_reg_1577[0:0] === 1'b1) ? tmp_54_fu_815_p2 : tmp_55_fu_821_p3);

assign tmp_57_fu_836_p4 = {{reg_542[9:4]}};

assign tmp_58_fu_846_p3 = ((tmp_50_reg_1577[0:0] === 1'b1) ? grp_fu_566_p2 : tmp_57_fu_836_p4);

assign tmp_59_cast_fu_853_p3 = {{tmp_58_fu_846_p3}, {4'd0}};

assign tmp_59_fu_861_p2 = (tmp_59_cast_fu_853_p3 + tmp_56_fu_829_p3);

assign tmp_60_cast_fu_935_p1 = tmp_59_reg_1589;

assign tmp_60_fu_1079_p1 = tmp_35_reg_1616[5:0];

assign tmp_62_fu_867_p1 = reg_546[3:0];

assign tmp_63_fu_871_p1 = grp_fu_572_p2[3:0];

assign tmp_64_fu_875_p3 = {{6'd0}, {tmp_63_fu_871_p1}};

assign tmp_65_fu_883_p2 = (10'd0 - tmp_64_fu_875_p3);

assign tmp_66_fu_889_p3 = {{6'd0}, {tmp_62_fu_867_p1}};

assign tmp_67_cast_fu_921_p3 = {{tmp_70_fu_914_p3}, {4'd0}};

assign tmp_67_fu_897_p3 = ((tmp_61_reg_1583[0:0] === 1'b1) ? tmp_65_fu_883_p2 : tmp_66_fu_889_p3);

assign tmp_68_cast_fu_939_p1 = tmp_68_reg_1594;

assign tmp_68_fu_929_p2 = (tmp_67_cast_fu_921_p3 + tmp_67_fu_897_p3);

assign tmp_69_fu_904_p4 = {{reg_546[9:4]}};

assign tmp_70_fu_914_p3 = ((tmp_61_reg_1583[0:0] === 1'b1) ? grp_fu_588_p2 : tmp_69_fu_904_p4);

assign tmp_72_fu_943_p1 = reg_542[3:0];

assign tmp_73_fu_947_p1 = grp_fu_550_p2[3:0];

assign tmp_74_fu_951_p3 = {{6'd0}, {tmp_73_fu_947_p1}};

assign tmp_75_cast_fu_997_p3 = {{tmp_80_fu_990_p3}, {4'd0}};

assign tmp_75_fu_959_p2 = (10'd0 - tmp_74_fu_951_p3);

assign tmp_76_cast_fu_1093_p1 = tmp_76_reg_1626;

assign tmp_76_fu_1005_p2 = (tmp_75_cast_fu_997_p3 + tmp_78_fu_973_p3);

assign tmp_77_fu_965_p3 = {{6'd0}, {tmp_72_fu_943_p1}};

assign tmp_78_fu_973_p3 = ((tmp_71_reg_1599[0:0] === 1'b1) ? tmp_75_fu_959_p2 : tmp_77_fu_965_p3);

assign tmp_79_fu_980_p4 = {{reg_542[9:4]}};

assign tmp_80_fu_990_p3 = ((tmp_71_reg_1599[0:0] === 1'b1) ? grp_fu_566_p2 : tmp_79_fu_980_p4);

assign tmp_82_fu_1011_p1 = reg_546[3:0];

assign tmp_83_cast_fu_1065_p3 = {{tmp_90_fu_1058_p3}, {4'd0}};

assign tmp_83_fu_1015_p1 = grp_fu_572_p2[3:0];

assign tmp_84_cast_fu_1097_p1 = tmp_84_reg_1631;

assign tmp_84_fu_1073_p2 = (tmp_83_cast_fu_1065_p3 + tmp_88_fu_1041_p3);

assign tmp_85_fu_1019_p3 = {{6'd0}, {tmp_83_fu_1015_p1}};

assign tmp_86_fu_1027_p2 = (10'd0 - tmp_85_fu_1019_p3);

assign tmp_87_fu_1033_p3 = {{6'd0}, {tmp_82_fu_1011_p1}};

assign tmp_88_fu_1041_p3 = ((tmp_81_reg_1605[0:0] === 1'b1) ? tmp_86_fu_1027_p2 : tmp_87_fu_1033_p3);

assign tmp_89_fu_1048_p4 = {{reg_546[9:4]}};

assign tmp_90_fu_1058_p3 = ((tmp_81_reg_1605[0:0] === 1'b1) ? grp_fu_588_p2 : tmp_89_fu_1048_p4);

assign tmp_91_cast_fu_1253_p3 = {{tmp_106_fu_1246_p3}, {4'd0}};

assign tmp_91_fu_1147_p1 = i_1_reg_456[1:0];

assign tmp_92_cast_fu_1267_p1 = tmp_92_fu_1261_p2;

assign tmp_92_fu_1261_p2 = (tmp_91_cast_fu_1253_p3 + tmp_104_fu_1225_p3);

assign tmp_93_fu_1353_p3 = {{i_2_reg_515}, {7'd0}};

assign tmp_94_fu_1361_p3 = {{i_2_reg_515}, {3'd0}};

assign tmp_95_fu_1373_p2 = (tmp_93_fu_1353_p3 - p_shl2_cast_fu_1369_p1);

assign tmp_96_cast_fu_1384_p1 = $signed(tmp_96_fu_1379_p2);

assign tmp_96_fu_1379_p2 = (tmp_95_fu_1373_p2 + tmp_54_cast_cast_reg_1702);

assign tmp_97_cast_fu_1394_p1 = tmp_97_fu_1389_p2;

assign tmp_97_fu_1389_p2 = (tmp_95_fu_1373_p2 + tmp_40_reg_1513);

assign tmp_99_fu_1201_p1 = in_assign_4_reg_1680[3:0];

assign tmp_fu_626_p1 = j4_reg_340[2:0];

assign tmp_s_fu_630_p3 = {{tmp_fu_626_p1}, {2'd0}};

assign type_read_read_fu_106_p2 = type_r;

always @ (posedge ap_clk) begin
    round_val_cast_cast_reg_1445[7:4] <= 4'b0000;
    nb_cast_cast_reg_1450[7:4] <= 4'b0000;
    j_cast_reg_1455[7:4] <= 4'b0000;
    j_cast2_reg_1460[31:4] <= 28'b0000000000000000000000000000;
    j4_cast1_cast_reg_1467[9:4] <= 6'b000000;
    tmp_s_reg_1480[1:0] <= 2'b00;
    tmp_45_cast_reg_1485[31:8] <= 24'b000000000000000000000000;
    word_addr_4_reg_1552[8] <= 1'b0;
    tmp_54_cast_cast_reg_1702[9:8] <= 2'b00;
    j_reg_307[0] <= 1'b0;
end

endmodule //KeySchedule
