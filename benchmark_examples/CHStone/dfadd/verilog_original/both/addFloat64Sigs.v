// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module addFloat64Sigs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        zSign,
        float_exception_flag_i,
        float_exception_flag_o,
        float_exception_flag_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] a;
input  [63:0] b;
input  [0:0] zSign;
input  [31:0] float_exception_flag_i;
output  [31:0] float_exception_flag_o;
output   float_exception_flag_o_ap_vld;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] float_exception_flag_o;
reg float_exception_flag_o_ap_vld;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_propagateFloat64NaN_fu_216_ap_return;
wire   [0:0] tmp_s_fu_319_p2;
wire   [0:0] tmp_61_fu_325_p3;
wire   [0:0] grp_fu_226_p2;
wire   [0:0] tmp_52_fu_389_p2;
wire   [0:0] tmp_45_fu_395_p2;
wire   [0:0] tmp_48_fu_401_p2;
wire   [0:0] tmp_43_fu_485_p2;
wire   [51:0] aSig_7_fu_243_p1;
reg   [51:0] aSig_7_reg_1239;
wire   [10:0] aExp_fu_247_p4;
reg   [10:0] aExp_reg_1244;
wire   [11:0] aExp_cast_fu_259_p1;
wire   [10:0] bExp_fu_267_p4;
reg   [10:0] bExp_reg_1255;
wire   [11:0] expDiff_fu_281_p2;
reg   [11:0] expDiff_reg_1260;
wire   [61:0] aSig_cast2_cast_fu_299_p1;
reg   [61:0] aSig_cast2_cast_reg_1266;
wire   [61:0] bSig_cast1_cast_fu_315_p1;
reg   [61:0] bSig_cast1_cast_reg_1272;
reg   [0:0] tmp_s_reg_1277;
reg   [0:0] tmp_61_reg_1281;
reg   [0:0] tmp_46_reg_1285;
wire   [0:0] grp_fu_231_p2;
reg   [0:0] tmp_53_reg_1289;
wire   [63:0] zSig_fu_347_p2;
wire   [63:0] tmp_59_fu_373_p4;
reg   [0:0] tmp_45_reg_1306;
wire   [63:0] tmp_55_fu_415_p2;
reg   [0:0] tmp_41_reg_1318;
wire   [61:0] bSig_8_fu_443_p3;
reg   [61:0] bSig_8_reg_1322;
wire   [10:0] expDiff_4_fu_451_p3;
reg   [10:0] expDiff_4_reg_1330;
wire   [0:0] icmp_fu_473_p2;
reg   [0:0] icmp_reg_1336;
wire   [5:0] tmp_33_i_fu_479_p2;
reg   [5:0] tmp_33_i_reg_1341;
wire   [61:0] aSig_9_fu_505_p3;
reg   [61:0] aSig_9_reg_1349;
wire    ap_CS_fsm_state2;
wire   [11:0] count_assign_3_fu_527_p2;
reg   [11:0] count_assign_3_reg_1356;
wire   [0:0] tmp_i1_fu_533_p2;
reg   [0:0] tmp_i1_reg_1361;
wire   [0:0] icmp7_fu_549_p2;
reg   [0:0] icmp7_reg_1367;
wire   [0:0] tmp_37_i8_fu_565_p2;
reg   [0:0] tmp_37_i8_reg_1372;
wire   [61:0] z_16_fu_633_p3;
wire    ap_CS_fsm_state3;
wire   [61:0] z_15_fu_726_p3;
wire    ap_CS_fsm_state4;
wire   [11:0] zExp_0_s_fu_783_p3;
wire    ap_CS_fsm_state5;
wire   [63:0] p_s_fu_791_p3;
wire   [9:0] roundBits_fu_803_p1;
reg   [9:0] roundBits_reg_1397;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_40_i_fu_807_p2;
reg   [0:0] tmp_40_i_reg_1403;
wire   [63:0] z_14_fu_917_p3;
reg   [63:0] z_14_reg_1411;
wire   [9:0] roundBits_4_fu_925_p1;
reg   [9:0] roundBits_4_reg_1416;
wire   [0:0] sel_tmp10_i_fu_965_p2;
reg   [0:0] sel_tmp10_i_reg_1422;
wire   [0:0] sel_tmp56_i_fu_977_p2;
reg   [0:0] sel_tmp56_i_reg_1431;
wire   [0:0] tmp_52_i_fu_983_p2;
reg   [0:0] tmp_52_i_reg_1438;
wire    ap_CS_fsm_state7;
wire   [0:0] not_tmp_1_i_fu_1012_p2;
reg   [0:0] not_tmp_1_i_reg_1444;
wire   [53:0] zSig1_2_fu_1054_p2;
reg   [53:0] zSig1_2_reg_1450;
wire   [0:0] tmp_62_i_fu_1060_p2;
reg   [0:0] tmp_62_i_reg_1455;
wire    grp_propagateFloat64NaN_fu_216_ap_ready;
wire   [31:0] grp_propagateFloat64NaN_fu_216_float_exception_flag_o;
wire    grp_propagateFloat64NaN_fu_216_float_exception_flag_o_ap_vld;
reg   [61:0] bSig_1_reg_148;
reg   [61:0] aSig_1_reg_157;
reg   [10:0] zExp_3_reg_166;
reg   [11:0] zExp_assign_reg_175;
reg   [63:0] zSig_assign_s_reg_185;
reg   [63:0] ap_phi_mux_p_0_phi_fu_198_p16;
reg   [63:0] p_0_reg_195;
wire   [63:0] p_0_i_fu_1213_p3;
wire    ap_CS_fsm_state8;
wire   [31:0] float_exception_flag_5_fu_1206_p3;
wire   [0:0] float_exception_flag_4_fu_1200_p2;
reg   [10:0] grp_fu_231_p0;
wire   [11:0] bExp_cast_fu_277_p1;
wire   [60:0] aSig_fu_291_p3;
wire   [51:0] bSig_7_fu_263_p1;
wire   [60:0] bSig_fu_303_p3;
wire   [62:0] tmp_60_fu_333_p4;
wire   [63:0] bSig_cast1_fu_311_p1;
wire   [63:0] tmp_108_cast_fu_343_p1;
wire   [61:0] tmp_58_fu_353_p2;
wire   [52:0] zSig1_fu_359_p4;
wire   [61:0] zSig1_1_fu_369_p1;
wire   [60:0] tmp_51_fu_383_p2;
wire   [63:0] tmp_54_fu_407_p3;
wire   [10:0] tmp_fu_287_p1;
wire   [0:0] tmp_44_fu_421_p2;
wire   [61:0] bSig_6_fu_433_p4;
wire   [10:0] expDiff_4_cast_fu_427_p2;
wire   [4:0] tmp_67_fu_463_p4;
wire   [5:0] tmp_64_fu_459_p1;
wire   [61:0] aSig_6_fu_496_p4;
wire   [11:0] expDiff_5_fu_491_p2;
wire   [11:0] expDiff_1_fu_516_p3;
wire   [5:0] tmp_70_fu_539_p4;
wire   [5:0] tmp_69_fu_523_p1;
wire   [63:0] aSig_7_cast_fu_512_p1;
wire   [63:0] tmp_35_i6_fu_555_p1;
wire   [63:0] tmp_36_i7_fu_559_p2;
wire   [61:0] tmp_31_i3_cast_fu_571_p1;
wire   [61:0] tmp_32_i4_fu_574_p2;
wire   [0:0] tmp_71_fu_579_p1;
wire   [60:0] tmp_40_fu_588_p4;
wire   [0:0] tmp_19_i2_fu_583_p2;
wire   [0:0] tmp_38_i2_fu_606_p2;
wire   [0:0] sel_tmp_i3_fu_615_p2;
wire   [0:0] sel_tmp1_i3_fu_620_p2;
wire   [61:0] tmp_50_fu_598_p3;
wire   [61:0] z_18_cast_fu_611_p1;
wire   [61:0] z_11_fu_625_p3;
wire   [61:0] tmp_31_i_cast_fu_647_p1;
wire   [63:0] bSig_7_cast_fu_639_p1;
wire   [63:0] tmp_35_i_fu_655_p1;
wire   [63:0] tmp_36_i_fu_658_p2;
wire   [61:0] tmp_32_i_fu_650_p2;
wire   [0:0] tmp_68_fu_670_p1;
wire   [0:0] tmp_37_i_fu_664_p2;
wire   [60:0] tmp_38_fu_680_p4;
wire   [0:0] tmp_19_i_fu_674_p2;
wire   [0:0] tmp_38_i_fu_698_p2;
wire   [0:0] tmp_i_fu_642_p2;
wire   [0:0] sel_tmp_i_fu_707_p2;
wire   [0:0] sel_tmp1_i_fu_713_p2;
wire   [61:0] tmp_39_fu_690_p3;
wire   [61:0] z_14_cast_fu_703_p1;
wire   [61:0] z_fu_718_p3;
wire   [61:0] aSig_8_fu_741_p2;
wire   [62:0] aSig_8_cast_fu_747_p1;
wire   [62:0] bSig_1_cast_fu_733_p1;
wire   [62:0] zSig_2_fu_751_p2;
wire   [11:0] zExp_4_cast_fu_737_p1;
wire   [0:0] tmp_72_fu_775_p3;
wire   [11:0] zExp_4_fu_769_p2;
wire   [63:0] zSig_2_cast_fu_757_p1;
wire   [63:0] zSig_3_fu_761_p3;
wire   [63:0] tmp_43_i_fu_825_p2;
wire   [11:0] count_assign_4_fu_847_p2;
wire  signed [31:0] count_assign_i_cast_fu_853_p1;
wire   [63:0] tmp_33_i_i_fu_863_p1;
wire   [5:0] tmp_76_fu_799_p1;
wire   [63:0] tmp_37_i_i_fu_873_p1;
wire   [63:0] tmp_38_i_i_fu_877_p2;
wire   [63:0] tmp_34_i_i_fu_867_p2;
wire   [0:0] tmp_80_fu_889_p1;
wire   [0:0] tmp_39_i_i_fu_883_p2;
wire   [62:0] tmp_20_i_i_fu_899_p4;
wire   [0:0] tmp_19_i_i_fu_893_p2;
wire   [0:0] tmp_i_i_fu_857_p2;
wire   [63:0] z_13_fu_909_p3;
wire   [0:0] tmp_41_i_fu_813_p2;
wire   [0:0] tmp_42_i_fu_819_p2;
wire   [0:0] tmp_78_fu_831_p3;
wire   [0:0] sel_tmp9_i_demorgan_fu_941_p2;
wire   [0:0] tmp_79_fu_839_p3;
wire   [0:0] sel_tmp4_i_fu_929_p2;
wire   [0:0] sel_tmp9_i_fu_947_p2;
wire   [0:0] tmp27_fu_959_p2;
wire   [0:0] tmp26_fu_953_p2;
wire   [0:0] sel_tmp9_demorgan_i_fu_935_p2;
wire   [0:0] sel_tmp55_i_fu_971_p2;
wire   [63:0] zSig_assign_6_fu_988_p3;
wire   [9:0] roundBits_5_fu_1001_p3;
wire   [9:0] roundBits_6_fu_1006_p3;
wire   [63:0] zSig_assign_7_fu_994_p3;
wire   [63:0] tmp_57_i_fu_1018_p2;
wire   [0:0] tmp_58_i_fu_1034_p2;
wire   [31:0] tmp_59_i_fu_1040_p1;
wire   [31:0] tmp_60_i_fu_1044_p2;
wire   [53:0] zSig_assign_1_i_cast_fu_1024_p4;
wire  signed [53:0] tmp_61_i_cast_fu_1050_p1;
wire   [63:0] tmp_48_i_fu_1076_p3;
wire   [31:0] tmp_53_i_fu_1089_p2;
wire   [0:0] not_tmp_i_fu_1095_p2;
wire   [31:0] float_exception_flag_7_fu_1100_p3;
wire   [31:0] sel_tmp21_i_fu_1112_p3;
wire   [31:0] float_exception_flag_2_fu_1119_p3;
wire   [0:0] tmp_82_fu_1126_p1;
wire   [30:0] tmp_63_fu_1135_p4;
wire   [0:0] tmp_62_fu_1130_p2;
wire   [11:0] tmp_65_fu_1153_p3;
wire   [11:0] tmp_66_fu_1160_p3;
wire   [11:0] tmp_73_fu_1167_p3;
wire   [63:0] tmp_67_i_fu_1182_p4;
wire   [63:0] tmp_66_i_fu_1174_p3;
wire   [0:0] tmp28_fu_1196_p2;
wire   [0:0] float_exception_flag_1_fu_1107_p2;
wire   [31:0] tmp_46_i_fu_1070_p2;
wire   [31:0] float_exception_flag_3_fu_1145_p3;
wire   [63:0] tmp_49_i_fu_1083_p2;
wire   [63:0] tmp_68_i_fu_1190_p2;
reg   [63:0] ap_return_preg;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_return_preg = 64'd0;
end

propagateFloat64NaN grp_propagateFloat64NaN_fu_216(
    .ap_ready(grp_propagateFloat64NaN_fu_216_ap_ready),
    .a(a),
    .b(b),
    .float_exception_flag_i(float_exception_flag_i),
    .float_exception_flag_o(grp_propagateFloat64NaN_fu_216_float_exception_flag_o),
    .float_exception_flag_o_ap_vld(grp_propagateFloat64NaN_fu_216_float_exception_flag_o_ap_vld),
    .ap_return(grp_propagateFloat64NaN_fu_216_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_return_preg <= ap_phi_mux_p_0_phi_fu_198_p16;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        aSig_1_reg_157 <= z_16_fu_633_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        aSig_1_reg_157 <= aSig_cast2_cast_reg_1266;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bSig_1_reg_148 <= bSig_cast1_cast_reg_1272;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bSig_1_reg_148 <= z_15_fu_726_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_43_fu_485_p2 == 1'd1) & (grp_fu_226_p2 == 1'd1) & (tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((tmp_52_fu_389_p2 == 1'd1) & (grp_fu_226_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        p_0_reg_195 <= a;
    end else if (((grp_fu_231_p2 == 1'd1) & (grp_fu_226_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_0_reg_195 <= tmp_59_fu_373_p4;
    end else if (((tmp_48_fu_401_p2 == 1'd1) & (tmp_45_fu_395_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd1) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_0_reg_195 <= tmp_55_fu_415_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & ((((tmp_61_reg_1281 == 1'd1) & (tmp_s_reg_1277 == 1'd0) & (tmp_45_reg_1306 == 1'd0)) | ((tmp_s_reg_1277 == 1'd1) & (tmp_41_reg_1318 == 1'd0))) | ((tmp_53_reg_1289 == 1'd0) & (tmp_46_reg_1285 == 1'd0) & (tmp_61_reg_1281 == 1'd0) & (tmp_s_reg_1277 == 1'd0))))) begin
        p_0_reg_195 <= p_0_i_fu_1213_p3;
    end else if ((((grp_fu_226_p2 == 1'd1) & (tmp_43_fu_485_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((tmp_45_fu_395_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd1) & (tmp_48_fu_401_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((grp_fu_226_p2 == 1'd1) & (tmp_52_fu_389_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        p_0_reg_195 <= grp_propagateFloat64NaN_fu_216_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zExp_3_reg_166 <= bExp_reg_1255;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        zExp_3_reg_166 <= aExp_reg_1244;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        zExp_assign_reg_175 <= zExp_0_s_fu_783_p3;
    end else if (((grp_fu_231_p2 == 1'd0) & (grp_fu_226_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        zExp_assign_reg_175 <= aExp_cast_fu_259_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        zSig_assign_s_reg_185 <= p_s_fu_791_p3;
    end else if (((grp_fu_231_p2 == 1'd0) & (grp_fu_226_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        zSig_assign_s_reg_185 <= zSig_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        aExp_reg_1244 <= {{a[62:52]}};
        aSig_7_reg_1239 <= aSig_7_fu_243_p1;
        aSig_cast2_cast_reg_1266[60 : 9] <= aSig_cast2_cast_fu_299_p1[60 : 9];
        bExp_reg_1255 <= {{b[62:52]}};
        bSig_cast1_cast_reg_1272[60 : 9] <= bSig_cast1_cast_fu_315_p1[60 : 9];
        expDiff_reg_1260 <= expDiff_fu_281_p2;
        tmp_s_reg_1277 <= tmp_s_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        aSig_9_reg_1349[61 : 9] <= aSig_9_fu_505_p3[61 : 9];
        count_assign_3_reg_1356 <= count_assign_3_fu_527_p2;
        icmp7_reg_1367 <= icmp7_fu_549_p2;
        tmp_37_i8_reg_1372 <= tmp_37_i8_fu_565_p2;
        tmp_i1_reg_1361 <= tmp_i1_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_226_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bSig_8_reg_1322[61 : 9] <= bSig_8_fu_443_p3[61 : 9];
        expDiff_4_reg_1330 <= expDiff_4_fu_451_p3;
        icmp_reg_1336 <= icmp_fu_473_p2;
        tmp_33_i_reg_1341 <= tmp_33_i_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        not_tmp_1_i_reg_1444 <= not_tmp_1_i_fu_1012_p2;
        tmp_52_i_reg_1438 <= tmp_52_i_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        roundBits_4_reg_1416 <= roundBits_4_fu_925_p1;
        roundBits_reg_1397 <= roundBits_fu_803_p1;
        sel_tmp10_i_reg_1422 <= sel_tmp10_i_fu_965_p2;
        sel_tmp56_i_reg_1431 <= sel_tmp56_i_fu_977_p2;
        tmp_40_i_reg_1403 <= tmp_40_i_fu_807_p2;
        z_14_reg_1411 <= z_14_fu_917_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_41_reg_1318 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_fu_325_p3 == 1'd1) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_45_reg_1306 <= tmp_45_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_46_reg_1285 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_226_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_53_reg_1289 <= grp_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_61_reg_1281 <= expDiff_fu_281_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((sel_tmp56_i_reg_1431 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_62_i_reg_1455 <= tmp_62_i_fu_1060_p2;
        zSig1_2_reg_1450 <= zSig1_2_fu_1054_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((((tmp_61_reg_1281 == 1'd1) & (tmp_s_reg_1277 == 1'd0) & (tmp_45_reg_1306 == 1'd0)) | ((tmp_s_reg_1277 == 1'd1) & (tmp_41_reg_1318 == 1'd0))) | ((tmp_53_reg_1289 == 1'd0) & (tmp_46_reg_1285 == 1'd0) & (tmp_61_reg_1281 == 1'd0) & (tmp_s_reg_1277 == 1'd0))))) begin
        ap_phi_mux_p_0_phi_fu_198_p16 = p_0_i_fu_1213_p3;
    end else begin
        ap_phi_mux_p_0_phi_fu_198_p16 = p_0_reg_195;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_return = ap_phi_mux_p_0_phi_fu_198_p16;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((((tmp_61_reg_1281 == 1'd1) & (float_exception_flag_4_fu_1200_p2 == 1'd1) & (tmp_s_reg_1277 == 1'd0) & (tmp_45_reg_1306 == 1'd0)) | ((tmp_s_reg_1277 == 1'd1) & (float_exception_flag_4_fu_1200_p2 == 1'd1) & (tmp_41_reg_1318 == 1'd0))) | ((float_exception_flag_4_fu_1200_p2 == 1'd1) & (tmp_53_reg_1289 == 1'd0) & (tmp_46_reg_1285 == 1'd0) & (tmp_61_reg_1281 == 1'd0) & (tmp_s_reg_1277 == 1'd0))))) begin
        float_exception_flag_o = float_exception_flag_5_fu_1206_p3;
    end else if ((((grp_fu_226_p2 == 1'd1) & (tmp_43_fu_485_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (grp_propagateFloat64NaN_fu_216_float_exception_flag_o_ap_vld == 1'b1) & (ap_start == 1'b1)) | ((tmp_45_fu_395_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd1) & (tmp_48_fu_401_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (grp_propagateFloat64NaN_fu_216_float_exception_flag_o_ap_vld == 1'b1) & (ap_start == 1'b1)) | ((grp_fu_226_p2 == 1'd1) & (tmp_52_fu_389_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (grp_propagateFloat64NaN_fu_216_float_exception_flag_o_ap_vld == 1'b1) & (ap_start == 1'b1)))) begin
        float_exception_flag_o = grp_propagateFloat64NaN_fu_216_float_exception_flag_o;
    end else begin
        float_exception_flag_o = float_exception_flag_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((((tmp_61_reg_1281 == 1'd1) & (float_exception_flag_4_fu_1200_p2 == 1'd1) & (tmp_s_reg_1277 == 1'd0) & (tmp_45_reg_1306 == 1'd0)) | ((tmp_s_reg_1277 == 1'd1) & (float_exception_flag_4_fu_1200_p2 == 1'd1) & (tmp_41_reg_1318 == 1'd0))) | ((float_exception_flag_4_fu_1200_p2 == 1'd1) & (tmp_53_reg_1289 == 1'd0) & (tmp_46_reg_1285 == 1'd0) & (tmp_61_reg_1281 == 1'd0) & (tmp_s_reg_1277 == 1'd0))))) begin
        float_exception_flag_o_ap_vld = 1'b1;
    end else if ((((grp_fu_226_p2 == 1'd1) & (tmp_43_fu_485_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((tmp_45_fu_395_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd1) & (tmp_48_fu_401_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((grp_fu_226_p2 == 1'd1) & (tmp_52_fu_389_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        float_exception_flag_o_ap_vld = grp_propagateFloat64NaN_fu_216_float_exception_flag_o_ap_vld;
    end else begin
        float_exception_flag_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_231_p0 = aExp_reg_1244;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_231_p0 = {{a[62:52]}};
    end else begin
        grp_fu_231_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((grp_fu_226_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((tmp_61_fu_325_p3 == 1'd1) & (tmp_45_fu_395_p2 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (((((grp_fu_226_p2 == 1'd1) & (tmp_s_fu_319_p2 == 1'd1)) | ((tmp_45_fu_395_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd1) & (tmp_s_fu_319_p2 == 1'd0))) | ((grp_fu_231_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0))) | ((grp_fu_226_p2 == 1'd1) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((grp_fu_231_p2 == 1'd0) & (grp_fu_226_p2 == 1'd0) & (tmp_61_fu_325_p3 == 1'd0) & (tmp_s_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aExp_cast_fu_259_p1 = aExp_fu_247_p4;

assign aExp_fu_247_p4 = {{a[62:52]}};

assign aSig_6_fu_496_p4 = {{{{1'd1}, {aSig_7_reg_1239}}}, {9'd0}};

assign aSig_7_cast_fu_512_p1 = aSig_9_fu_505_p3;

assign aSig_7_fu_243_p1 = a[51:0];

assign aSig_8_cast_fu_747_p1 = aSig_8_fu_741_p2;

assign aSig_8_fu_741_p2 = (62'd2305843009213693952 | aSig_1_reg_157);

assign aSig_9_fu_505_p3 = ((grp_fu_231_p2[0:0] === 1'b1) ? aSig_cast2_cast_reg_1266 : aSig_6_fu_496_p4);

assign aSig_cast2_cast_fu_299_p1 = aSig_fu_291_p3;

assign aSig_fu_291_p3 = {{aSig_7_fu_243_p1}, {9'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign bExp_cast_fu_277_p1 = bExp_fu_267_p4;

assign bExp_fu_267_p4 = {{b[62:52]}};

assign bSig_1_cast_fu_733_p1 = bSig_1_reg_148;

assign bSig_6_fu_433_p4 = {{{{1'd1}, {bSig_7_fu_263_p1}}}, {9'd0}};

assign bSig_7_cast_fu_639_p1 = bSig_8_reg_1322;

assign bSig_7_fu_263_p1 = b[51:0];

assign bSig_8_fu_443_p3 = ((tmp_44_fu_421_p2[0:0] === 1'b1) ? bSig_cast1_cast_fu_315_p1 : bSig_6_fu_433_p4);

assign bSig_cast1_cast_fu_315_p1 = bSig_fu_303_p3;

assign bSig_cast1_fu_311_p1 = bSig_fu_303_p3;

assign bSig_fu_303_p3 = {{bSig_7_fu_263_p1}, {9'd0}};

assign count_assign_3_fu_527_p2 = (12'd0 - expDiff_1_fu_516_p3);

assign count_assign_4_fu_847_p2 = (12'd0 - zExp_assign_reg_175);

assign count_assign_i_cast_fu_853_p1 = $signed(count_assign_4_fu_847_p2);

assign expDiff_1_fu_516_p3 = ((grp_fu_231_p2[0:0] === 1'b1) ? expDiff_5_fu_491_p2 : expDiff_reg_1260);

assign expDiff_4_cast_fu_427_p2 = ($signed(11'd2047) + $signed(tmp_fu_287_p1));

assign expDiff_4_fu_451_p3 = ((tmp_44_fu_421_p2[0:0] === 1'b1) ? expDiff_4_cast_fu_427_p2 : tmp_fu_287_p1);

assign expDiff_5_fu_491_p2 = (12'd1 + expDiff_reg_1260);

assign expDiff_fu_281_p2 = (aExp_cast_fu_259_p1 - bExp_cast_fu_277_p1);

assign float_exception_flag_1_fu_1107_p2 = (sel_tmp10_i_reg_1422 & not_tmp_i_fu_1095_p2);

assign float_exception_flag_2_fu_1119_p3 = ((tmp_40_i_reg_1403[0:0] === 1'b1) ? sel_tmp21_i_fu_1112_p3 : float_exception_flag_i);

assign float_exception_flag_3_fu_1145_p3 = {{tmp_63_fu_1135_p4}, {tmp_62_fu_1130_p2}};

assign float_exception_flag_4_fu_1200_p2 = (tmp28_fu_1196_p2 | float_exception_flag_1_fu_1107_p2);

assign float_exception_flag_5_fu_1206_p3 = ((sel_tmp56_i_reg_1431[0:0] === 1'b1) ? tmp_46_i_fu_1070_p2 : float_exception_flag_3_fu_1145_p3);

assign float_exception_flag_7_fu_1100_p3 = ((tmp_52_i_reg_1438[0:0] === 1'b1) ? float_exception_flag_i : tmp_53_i_fu_1089_p2);

assign grp_fu_226_p2 = ((aExp_fu_247_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign grp_fu_231_p2 = ((grp_fu_231_p0 == 11'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_549_p2 = (($signed(tmp_70_fu_539_p4) < $signed(6'd1)) ? 1'b1 : 1'b0);

assign icmp_fu_473_p2 = ((tmp_67_fu_463_p4 == 5'd0) ? 1'b1 : 1'b0);

assign not_tmp_1_i_fu_1012_p2 = ((roundBits_6_fu_1006_p3 != 10'd0) ? 1'b1 : 1'b0);

assign not_tmp_i_fu_1095_p2 = (tmp_52_i_reg_1438 ^ 1'd1);

assign p_0_i_fu_1213_p3 = ((sel_tmp56_i_reg_1431[0:0] === 1'b1) ? tmp_49_i_fu_1083_p2 : tmp_68_i_fu_1190_p2);

assign p_s_fu_791_p3 = ((tmp_72_fu_775_p3[0:0] === 1'b1) ? zSig_2_cast_fu_757_p1 : zSig_3_fu_761_p3);

assign roundBits_4_fu_925_p1 = z_14_fu_917_p3[9:0];

assign roundBits_5_fu_1001_p3 = ((sel_tmp10_i_reg_1422[0:0] === 1'b1) ? roundBits_4_reg_1416 : roundBits_reg_1397);

assign roundBits_6_fu_1006_p3 = ((tmp_40_i_reg_1403[0:0] === 1'b1) ? roundBits_5_fu_1001_p3 : roundBits_reg_1397);

assign roundBits_fu_803_p1 = zSig_assign_s_reg_185[9:0];

assign sel_tmp10_i_fu_965_p2 = (tmp27_fu_959_p2 & tmp26_fu_953_p2);

assign sel_tmp1_i3_fu_620_p2 = (sel_tmp_i3_fu_615_p2 & icmp7_reg_1367);

assign sel_tmp1_i_fu_713_p2 = (sel_tmp_i_fu_707_p2 & icmp_reg_1336);

assign sel_tmp21_i_fu_1112_p3 = ((sel_tmp10_i_reg_1422[0:0] === 1'b1) ? float_exception_flag_7_fu_1100_p3 : float_exception_flag_i);

assign sel_tmp4_i_fu_929_p2 = (tmp_41_i_fu_813_p2 ^ 1'd1);

assign sel_tmp55_i_fu_971_p2 = (tmp_41_i_fu_813_p2 | sel_tmp9_demorgan_i_fu_935_p2);

assign sel_tmp56_i_fu_977_p2 = (tmp_40_i_fu_807_p2 & sel_tmp55_i_fu_971_p2);

assign sel_tmp9_demorgan_i_fu_935_p2 = (tmp_78_fu_831_p3 & tmp_42_i_fu_819_p2);

assign sel_tmp9_i_demorgan_fu_941_p2 = (tmp_78_fu_831_p3 & tmp_42_i_fu_819_p2);

assign sel_tmp9_i_fu_947_p2 = (sel_tmp9_i_demorgan_fu_941_p2 ^ 1'd1);

assign sel_tmp_i3_fu_615_p2 = (tmp_i1_reg_1361 ^ 1'd1);

assign sel_tmp_i_fu_707_p2 = (tmp_i_fu_642_p2 ^ 1'd1);

assign tmp26_fu_953_p2 = (tmp_79_fu_839_p3 & sel_tmp4_i_fu_929_p2);

assign tmp27_fu_959_p2 = (tmp_40_i_fu_807_p2 & sel_tmp9_i_fu_947_p2);

assign tmp28_fu_1196_p2 = (sel_tmp56_i_reg_1431 | not_tmp_1_i_reg_1444);

assign tmp_108_cast_fu_343_p1 = tmp_60_fu_333_p4;

assign tmp_19_i2_fu_583_p2 = (tmp_71_fu_579_p1 | tmp_37_i8_reg_1372);

assign tmp_19_i_fu_674_p2 = (tmp_68_fu_670_p1 | tmp_37_i_fu_664_p2);

assign tmp_19_i_i_fu_893_p2 = (tmp_80_fu_889_p1 | tmp_39_i_i_fu_883_p2);

assign tmp_20_i_i_fu_899_p4 = {{tmp_34_i_i_fu_867_p2[63:1]}};

assign tmp_31_i3_cast_fu_571_p1 = count_assign_3_reg_1356;

assign tmp_31_i_cast_fu_647_p1 = expDiff_4_reg_1330;

assign tmp_32_i4_fu_574_p2 = aSig_9_reg_1349 >> tmp_31_i3_cast_fu_571_p1;

assign tmp_32_i_fu_650_p2 = bSig_8_reg_1322 >> tmp_31_i_cast_fu_647_p1;

assign tmp_33_i_fu_479_p2 = (6'd0 - tmp_64_fu_459_p1);

assign tmp_33_i_i_fu_863_p1 = $unsigned(count_assign_i_cast_fu_853_p1);

assign tmp_34_i_i_fu_867_p2 = zSig_assign_s_reg_185 >> tmp_33_i_i_fu_863_p1;

assign tmp_35_i6_fu_555_p1 = tmp_69_fu_523_p1;

assign tmp_35_i_fu_655_p1 = tmp_33_i_reg_1341;

assign tmp_36_i7_fu_559_p2 = aSig_7_cast_fu_512_p1 << tmp_35_i6_fu_555_p1;

assign tmp_36_i_fu_658_p2 = bSig_7_cast_fu_639_p1 << tmp_35_i_fu_655_p1;

assign tmp_37_i8_fu_565_p2 = ((tmp_36_i7_fu_559_p2 != 64'd0) ? 1'b1 : 1'b0);

assign tmp_37_i_fu_664_p2 = ((tmp_36_i_fu_658_p2 != 64'd0) ? 1'b1 : 1'b0);

assign tmp_37_i_i_fu_873_p1 = tmp_76_fu_799_p1;

assign tmp_38_fu_680_p4 = {{tmp_32_i_fu_650_p2[61:1]}};

assign tmp_38_i2_fu_606_p2 = ((aSig_9_reg_1349 != 62'd0) ? 1'b1 : 1'b0);

assign tmp_38_i_fu_698_p2 = ((bSig_8_reg_1322 != 62'd0) ? 1'b1 : 1'b0);

assign tmp_38_i_i_fu_877_p2 = zSig_assign_s_reg_185 << tmp_37_i_i_fu_873_p1;

assign tmp_39_fu_690_p3 = {{tmp_38_fu_680_p4}, {tmp_19_i_fu_674_p2}};

assign tmp_39_i_i_fu_883_p2 = ((tmp_38_i_i_fu_877_p2 != 64'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_588_p4 = {{tmp_32_i4_fu_574_p2[61:1]}};

assign tmp_40_i_fu_807_p2 = ((zExp_assign_reg_175 > 12'd2044) ? 1'b1 : 1'b0);

assign tmp_41_i_fu_813_p2 = (($signed(zExp_assign_reg_175) > $signed(12'd2045)) ? 1'b1 : 1'b0);

assign tmp_42_i_fu_819_p2 = ((zExp_assign_reg_175 == 12'd2045) ? 1'b1 : 1'b0);

assign tmp_43_fu_485_p2 = ((aSig_7_fu_243_p1 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_43_i_fu_825_p2 = (64'd512 + zSig_assign_s_reg_185);

assign tmp_44_fu_421_p2 = ((bExp_fu_267_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_45_fu_395_p2 = ((bExp_fu_267_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_46_i_fu_1070_p2 = (float_exception_flag_i | 32'd9);

assign tmp_48_fu_401_p2 = ((bSig_7_fu_263_p1 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_48_i_fu_1076_p3 = {{zSign}, {63'd0}};

assign tmp_49_i_fu_1083_p2 = (tmp_48_i_fu_1076_p3 | 64'd9218868437227405312);

assign tmp_50_fu_598_p3 = {{tmp_40_fu_588_p4}, {tmp_19_i2_fu_583_p2}};

assign tmp_51_fu_383_p2 = (bSig_fu_303_p3 | aSig_fu_291_p3);

assign tmp_52_fu_389_p2 = ((tmp_51_fu_383_p2 == 61'd0) ? 1'b1 : 1'b0);

assign tmp_52_i_fu_983_p2 = ((roundBits_4_reg_1416 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_53_i_fu_1089_p2 = (float_exception_flag_i | 32'd4);

assign tmp_54_fu_407_p3 = {{zSign}, {63'd0}};

assign tmp_55_fu_415_p2 = (tmp_54_fu_407_p3 | 64'd9218868437227405312);

assign tmp_57_i_fu_1018_p2 = (64'd512 + zSig_assign_7_fu_994_p3);

assign tmp_58_fu_353_p2 = (aSig_cast2_cast_fu_299_p1 + bSig_cast1_cast_fu_315_p1);

assign tmp_58_i_fu_1034_p2 = ((roundBits_6_fu_1006_p3 == 10'd512) ? 1'b1 : 1'b0);

assign tmp_59_fu_373_p4 = {{{zSign}, {1'd0}}, {zSig1_1_fu_369_p1}};

assign tmp_59_i_fu_1040_p1 = tmp_58_i_fu_1034_p2;

assign tmp_60_fu_333_p4 = {{{{2'd2}, {aSig_7_fu_243_p1}}}, {9'd0}};

assign tmp_60_i_fu_1044_p2 = (tmp_59_i_fu_1040_p1 ^ 32'd4294967295);

assign tmp_61_fu_325_p3 = expDiff_fu_281_p2[32'd11];

assign tmp_61_i_cast_fu_1050_p1 = $signed(tmp_60_i_fu_1044_p2);

assign tmp_62_fu_1130_p2 = (tmp_82_fu_1126_p1 | not_tmp_1_i_reg_1444);

assign tmp_62_i_fu_1060_p2 = ((zSig1_2_fu_1054_p2 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_63_fu_1135_p4 = {{float_exception_flag_2_fu_1119_p3[31:1]}};

assign tmp_64_fu_459_p1 = expDiff_4_fu_451_p3[5:0];

assign tmp_65_fu_1153_p3 = ((sel_tmp10_i_reg_1422[0:0] === 1'b1) ? 12'd0 : zExp_assign_reg_175);

assign tmp_66_fu_1160_p3 = ((tmp_40_i_reg_1403[0:0] === 1'b1) ? tmp_65_fu_1153_p3 : zExp_assign_reg_175);

assign tmp_66_i_fu_1174_p3 = {{tmp_73_fu_1167_p3}, {52'd0}};

assign tmp_67_fu_463_p4 = {{expDiff_4_fu_451_p3[10:6]}};

assign tmp_67_i_fu_1182_p4 = {{{zSign}, {9'd0}}, {zSig1_2_reg_1450}};

assign tmp_68_fu_670_p1 = tmp_32_i_fu_650_p2[0:0];

assign tmp_68_i_fu_1190_p2 = (tmp_67_i_fu_1182_p4 + tmp_66_i_fu_1174_p3);

assign tmp_69_fu_523_p1 = expDiff_1_fu_516_p3[5:0];

assign tmp_70_fu_539_p4 = {{count_assign_3_fu_527_p2[11:6]}};

assign tmp_71_fu_579_p1 = tmp_32_i4_fu_574_p2[0:0];

assign tmp_72_fu_775_p3 = zSig_2_fu_751_p2[32'd62];

assign tmp_73_fu_1167_p3 = ((tmp_62_i_reg_1455[0:0] === 1'b1) ? 12'd0 : tmp_66_fu_1160_p3);

assign tmp_76_fu_799_p1 = zExp_assign_reg_175[5:0];

assign tmp_78_fu_831_p3 = tmp_43_i_fu_825_p2[32'd63];

assign tmp_79_fu_839_p3 = zExp_assign_reg_175[32'd11];

assign tmp_80_fu_889_p1 = tmp_34_i_i_fu_867_p2[0:0];

assign tmp_82_fu_1126_p1 = float_exception_flag_2_fu_1119_p3[0:0];

assign tmp_fu_287_p1 = expDiff_fu_281_p2[10:0];

assign tmp_i1_fu_533_p2 = ((expDiff_1_fu_516_p3 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_i_fu_642_p2 = ((expDiff_4_reg_1330 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_857_p2 = ((zExp_assign_reg_175 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_319_p2 = (($signed(expDiff_fu_281_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign zExp_0_s_fu_783_p3 = ((tmp_72_fu_775_p3[0:0] === 1'b1) ? zExp_4_cast_fu_737_p1 : zExp_4_fu_769_p2);

assign zExp_4_cast_fu_737_p1 = zExp_3_reg_166;

assign zExp_4_fu_769_p2 = ($signed(12'd4095) + $signed(zExp_4_cast_fu_737_p1));

assign zSig1_1_fu_369_p1 = zSig1_fu_359_p4;

assign zSig1_2_fu_1054_p2 = (zSig_assign_1_i_cast_fu_1024_p4 & tmp_61_i_cast_fu_1050_p1);

assign zSig1_fu_359_p4 = {{tmp_58_fu_353_p2[61:9]}};

assign zSig_2_cast_fu_757_p1 = zSig_2_fu_751_p2;

assign zSig_2_fu_751_p2 = (aSig_8_cast_fu_747_p1 + bSig_1_cast_fu_733_p1);

assign zSig_3_fu_761_p3 = {{zSig_2_fu_751_p2}, {1'd0}};

assign zSig_assign_1_i_cast_fu_1024_p4 = {{tmp_57_i_fu_1018_p2[63:10]}};

assign zSig_assign_6_fu_988_p3 = ((sel_tmp10_i_reg_1422[0:0] === 1'b1) ? z_14_reg_1411 : zSig_assign_s_reg_185);

assign zSig_assign_7_fu_994_p3 = ((tmp_40_i_reg_1403[0:0] === 1'b1) ? zSig_assign_6_fu_988_p3 : zSig_assign_s_reg_185);

assign zSig_fu_347_p2 = (bSig_cast1_fu_311_p1 + tmp_108_cast_fu_343_p1);

assign z_11_fu_625_p3 = ((sel_tmp1_i3_fu_620_p2[0:0] === 1'b1) ? tmp_50_fu_598_p3 : z_18_cast_fu_611_p1);

assign z_13_fu_909_p3 = {{tmp_20_i_i_fu_899_p4}, {tmp_19_i_i_fu_893_p2}};

assign z_14_cast_fu_703_p1 = tmp_38_i_fu_698_p2;

assign z_14_fu_917_p3 = ((tmp_i_i_fu_857_p2[0:0] === 1'b1) ? zSig_assign_s_reg_185 : z_13_fu_909_p3);

assign z_15_fu_726_p3 = ((tmp_i_fu_642_p2[0:0] === 1'b1) ? bSig_8_reg_1322 : z_fu_718_p3);

assign z_16_fu_633_p3 = ((tmp_i1_reg_1361[0:0] === 1'b1) ? aSig_9_reg_1349 : z_11_fu_625_p3);

assign z_18_cast_fu_611_p1 = tmp_38_i2_fu_606_p2;

assign z_fu_718_p3 = ((sel_tmp1_i_fu_713_p2[0:0] === 1'b1) ? tmp_39_fu_690_p3 : z_14_cast_fu_703_p1);

always @ (posedge ap_clk) begin
    aSig_cast2_cast_reg_1266[8:0] <= 9'b000000000;
    aSig_cast2_cast_reg_1266[61] <= 1'b0;
    bSig_cast1_cast_reg_1272[8:0] <= 9'b000000000;
    bSig_cast1_cast_reg_1272[61] <= 1'b0;
    bSig_8_reg_1322[8:0] <= 9'b000000000;
    aSig_9_reg_1349[8:0] <= 9'b000000000;
end

endmodule //addFloat64Sigs
